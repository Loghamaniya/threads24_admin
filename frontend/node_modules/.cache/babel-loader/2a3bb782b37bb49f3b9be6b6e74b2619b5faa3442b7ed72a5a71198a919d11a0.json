{"ast":null,"code":"var _jsxFileName = \"D:\\\\useage\\\\projects\\\\admin\\\\frontend\\\\src\\\\App.jsx\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { MDBDataTable } from 'mdbreact';\nimport { MDBDatatable, MDBBtn, MDBIcon } from 'mdb-react-ui-kit';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [users, setUsers] = useState([\"\"]);\n  const [find, setFind] = useState([\"\"]);\n  const [searchuser, setSearchuser] = useState([\"\"]);\n  _s(useEffect(_s(() => {\n    _s();\n    useEffect(() => {\n      // \n      const fetchData = () => {\n        console.log(\"called\");\n        axios.get('http://localhost:5000/threads').then(async user => {\n          await setUsers(user.data);\n          console.log(users === find);\n          // if (users !== find) {\n          //   setFind(user.data);\n          // }\n        }).catch(err => console.log(err));\n      };\n\n      // Initial fetch\n      fetchData();\n\n      // Polling every 5 seconds (adjust as needed)\n      const intervalId = setInterval(fetchData, 5000);\n\n      // Cleanup on component unmount\n      return () => clearInterval(intervalId);\n    }, []);\n    // fetchData();\n    // axios.get('http://localhost:5000/threads')\n    // .then(async(user)=>{\n    // const a=await setUsers(user.data);\n    // if(users!==find)\n    // {\n    //   setFind(user.data);\n    // }\n    // })\n    // .catch(err=>console.log(err));\n    // console.log(users);\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), [find]), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  // const fetchData = () => {\n  //   console.log(\"called\");\n  //   axios.get('http://localhost:5000/threads')\n  //     .then(async(user) => {\n  //       await setUsers(user.data);\n  //       console.log(users===find);\n  //       // if (users !== find) {\n  //       //   setFind(user.data);\n  //       // }\n  //     })\n  //     .catch((err) => console.log(err));\n  // };\n\n  //  const timer=setTimeout(()=>{\n  //     fetchData();\n  //  },5000);\n\n  const approvalfunction = async event => {\n    console.log(event);\n    const userData = {\n      email: event\n    };\n    axios.post(\"http://localhost:5000/threads/add\", userData).then(response => {\n      // const message=response.data.msgg;\n      alert(response.data.msgg);\n      fetchData();\n      console.log(response.data.msgg);\n    });\n  };\n  const deletefunction = async event => {\n    console.log(event);\n    const userData = {\n      email: event\n    };\n    axios.post(\"http://localhost:5000/threads/del\", userData).then(response => {\n      // const message=response.data.msgg;\n      alert(response.data.msgg);\n      fetchData();\n      console.log(response.data.msgg);\n    });\n  };\n  const data = {\n    columns: [{\n      label: 'Id',\n      field: '_id',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Name',\n      field: 'name',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Email',\n      field: 'email',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'UPI',\n      field: 'UPI_id',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Events',\n      field: 'selectedEvents',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Workshop',\n      field: 'selectedWorkshops',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Approve',\n      field: 'contact',\n      width: 200\n    }],\n    rows: [...users].map(row => {\n      return {\n        ...row,\n        contact: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: () => approvalfunction(`${row.email}`),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            color: \"red\",\n            onClick: () => deletefunction(`${row.email}`),\n            children: \"Del\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      };\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBDataTable, {\n      striped: true,\n      bordered: true,\n      small: true,\n      btn: true,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"4gh7cSis9vZMSLS/TsAA1nHtUUU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","MDBDataTable","MDBDatatable","MDBBtn","MDBIcon","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","users","setUsers","find","setFind","searchuser","setSearchuser","fetchData","console","log","get","then","user","data","catch","err","intervalId","setInterval","clearInterval","approvalfunction","event","userData","email","post","response","alert","msgg","deletefunction","columns","label","field","sort","width","rows","map","row","contact","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","color","striped","bordered","small","btn","_c","$RefreshReg$"],"sources":["D:/useage/projects/admin/frontend/src/App.jsx"],"sourcesContent":["import{useEffect,useState} from 'react';\nimport axios from 'axios'\nimport { MDBDataTable } from 'mdbreact';\nimport { MDBDatatable, MDBBtn, MDBIcon } from 'mdb-react-ui-kit';\n\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n\n  const[users,setUsers]=useState([\"\"]);\n  const[find,setFind]=useState([\"\"]);\n  const[searchuser,setSearchuser]=useState([\"\"]);\n  useEffect(()=>{\n    useEffect(() => {\n      // \n      const fetchData = () => {\n          console.log(\"called\");\n          axios.get('http://localhost:5000/threads')\n            .then(async(user) => {\n              await setUsers(user.data);\n              console.log(users===find);\n              // if (users !== find) {\n              //   setFind(user.data);\n              // }\n            })\n            .catch((err) => console.log(err));\n        };\n      \n  \n      // Initial fetch\n      fetchData();\n  \n      // Polling every 5 seconds (adjust as needed)\n      const intervalId = setInterval(fetchData, 5000);\n  \n      // Cleanup on component unmount\n      return () => clearInterval(intervalId);\n    }, []);\n    // fetchData();\n    // axios.get('http://localhost:5000/threads')\n    // .then(async(user)=>{\n    // const a=await setUsers(user.data);\n    // if(users!==find)\n    // {\n    //   setFind(user.data);\n    // }\n    // })\n    // .catch(err=>console.log(err));\n    // console.log(users);\n  },[find]);\n\n  // const fetchData = () => {\n  //   console.log(\"called\");\n  //   axios.get('http://localhost:5000/threads')\n  //     .then(async(user) => {\n  //       await setUsers(user.data);\n  //       console.log(users===find);\n  //       // if (users !== find) {\n  //       //   setFind(user.data);\n  //       // }\n  //     })\n  //     .catch((err) => console.log(err));\n  // };\n\n\n//  const timer=setTimeout(()=>{\n//     fetchData();\n//  },5000);\n\n  const approvalfunction=async(event)=>{\n    console.log(event);\n    const userData={\n      email:event\n    };\n    axios.post(\"http://localhost:5000/threads/add\", userData).then((response) => {\n      // const message=response.data.msgg;\n      alert(response.data.msgg);\n      fetchData();\n      console.log(response.data.msgg);\n    });\n\n   \n  }\n\n  const deletefunction=async(event)=>{\n    console.log(event);\n    const userData={\n      email:event\n    };\n    axios.post(\"http://localhost:5000/threads/del\", userData).then((response) => {\n      // const message=response.data.msgg;\n      alert(response.data.msgg);\n      fetchData();\n      console.log(response.data.msgg);\n    });\n\n   \n  }\n\n  const data = {\n    columns: [\n      {\n        label: 'Id',\n        field: '_id',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'UPI',\n        field: 'UPI_id',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Events',\n        field: 'selectedEvents',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Workshop',\n        field: 'selectedWorkshops',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Approve',\n        field: 'contact',\n        width:200\n      }\n     \n    ],\n    rows:[...users].map((row) => {\n      return {\n        ...row,\n        contact: (\n          <div className=\"button-container\"><button className=\"btn btn-success\" onClick={() =>approvalfunction(`${row.email}`)}>Add</button>\n          <button className=\"btn btn-danger\" color='red' onClick={() =>deletefunction(`${row.email}`)}>Del</button>\n         \n            \n          </div>\n        ),\n      };\n    }),\n     \n      \n    \n  };\n\n  return (\n    <div>\n      <br></br>\n      <MDBDataTable\n      striped\n      bordered\n      small\n      btn\n      data={data}\n    />\n    \n    </div>\n \n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}